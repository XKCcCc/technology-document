---------------
-----Redis-----
---------------

一、启动redis服务：
   1.前台启动：redis-server
   2.后台启动：redis-server &
   3.启动redis服务时，指定配置文件： redis-server redis.conf &

二、关闭redis服务：
   1.通过kill命令：通过ps -ef|grep redis 查看pid  kill -9 3968
   2.通过redis-cli命令关闭：redis-cli shutdown

三、redis打开客户端：用来连接redis服务，向redis服务端发送命令，并且显示redis服务处理结果
   1.redis-cli：是redis自带的客户端，使用命令redis-cli就可以启动redis的客户端程序；
      redis-cli默认连接127.0.0.1的6379端口上的redis服务
   2.redis-cli -p 端口号 连接127.0.0.1的指定端口上的redis服务
   3.redis-cli -h IP地址 -p 端口号 连接指定IP主机上的指定端口的redis服务

四、redis关闭客户端：
   1.exit/quit

五、redis基本知识
   1.redis-benchmark 测试服务器的性能
   2.ping 查看redis服务是否正常运行，如果正常返回pong
   3.查看redis服务器的统计信息
      info 查看redis服务的所有统计信息
      info [信息段] 查看redis服务器指定的统计信息（info Replication）
   4.redis的数据库实例
      select index 切换数据库
      set key value 添加数据
      dbsize 查看当前数据库实例中所有key的数量
      keys * 查看当前数据库实例中所有的key
      flushdb 清空数据库实例
      flushall 清空所有数据库实例
      config get * 查看redis中的所有配置信息
      config get parameter 查看redis中的指定配置信息

六、redis中的五种数据结构
   string 单key单value user：zhangsan 
   list 单key多有序value contacts：13924436606 2787044744@qq.com
   set 单key多无序value  city：bj sh tj cq
   hash 单key对象（属性：值）student:id:1 name:kc age:20
   zset 单key多有序value 1000 tj， 3000 cq， 2000 bj， 1500 sh

七、redis中的操作命令
   （一）redis中有关key的操作命令
      1.keys pattern 查看数据库中的key
         *匹配0个或多个字符
         ？匹配1个字符
         []匹配[]里的一个字符
         keys * 查看数据库中的所有key
         keys k* 查看数据库中所有以k开头的key
         keys h*o 查看数据库中所有以h开头、以o结尾的key
         keys h?o 查看数据库中所有以h开头、以o结尾，并且中间只有一个字符的key
         keys h[abc]llo 查看数据库中所有以h开头、以llo结尾，并且h后只能取abc中的一个字符的key
      2.exists key 判断key在数据库中是否存在，存在则返回1，不存在则返回0
         exists key [key key key] 返回值是存在key的数量
      3.move key index移动指定key到指定数据库实例
      4.ttl key查看指定key的剩余生存时间
         key没有设置生存时间则返回-1
         key不存在则返回-2
      5.expire key seconds 设置key的最大生存时间
      6.key type 查看指定key的数据类型
      7.rename key newkey 重命名key
      8.del key [key key key]删除指定的key，返回值为实际删除key的数量
   （二）redis中有关string类型数据的操作命令
      1.set key value 将string类型的数据设置到redis中，若key已存在，则新的value覆盖旧的value
      2.get key 从redis中获取string类型的数据
      3.append key value 追加字符串，key不存在则为set key
      4.strlen key 获取字符串数据的长度
      5.incr key 将字符串数值进行加1运算，value必须为数值，否则报错，返回值为运算之后的数据，若key不存在则设置一个key，初始化为0，在进行加1运算
      6.decr key 将字符串进行减1运算
      7.incrby key offset 将字符串数值进行加offset运算
      8.decrby key offset 将字符串数值进行减offset运算
      9.getrange key startIndex endIndex 闭区间获取字符串中从startIndex到endIndex的子字符串，字符串下标从0开始，第一个字符下标为0，最后一个字符下标为stren key，下标为负数则从右到左，最后一个为-1，getrange key 0 -1则获取整个字符串
      10.setrange key startIndex value 用value覆盖从下标为startIndex开始的字符串，能覆盖几个字符就几个字符
      11.setex key seconds value 设置字符串数据的同时设置最大生命周期
      12.setnx key value 设置string类型的value到redis中，若key已存在，则不设置
      13.mset key1 value1 key2 value2 批量将string类型的value设置到redis中
      14.mget key1 key2 key3 批量从redis中获取数据
      15.msetnx key1 value1 key2 value2 批量设置string类型的value到redis中，当所有key不存在则设置成功，当有一个以上以存在则全部不设置
   （三）redis中有关list类型数据的操作命令
      1.lpush key value [value value value] 将一个或者多个值依次插入到列表的表头（左侧））
      2.lrange key startIndex endIndex 获取指定列表中指定下标区间的元素
      3.rpush key value [value value value] 将一个或者多个值依次插入到列表的表尾（右侧）
      4.lpop key 从指定列表中移除并且返回表头元素
      5.rpop key 从指定列表中移除并且返回表尾元素
      6.lindex key index 获取指定列表中指定下标的元素
      7.llen key 获取指定列表的长度
      8.lrem key count value 根据count值移除指定列表中跟value相等的数据，count>0，则从列表左侧移除count个跟value相等的数据，count<0，则从列表右侧移除count个跟value相等的数据，count=0，则从列表中移除所有与vlue相等的数据
      9.ltrim key startIndex endIndex 截取指定列表中指定下标区间的元素组成新的列表，并且赋值给key
      10.lset key index value 将指定列表中指定下标的元素设置为指定值
      11.linsert key before/after pivot value 将value插入到指定列表中位于pivot元素之前/之后的位置
   （四）redis中有关set类型数据的操作命令
      1.sadd key value [value value value] 将一个或者多个元素添加到指定的集合中，如果元素已存在，则忽略
      2.smembers key 获取指定集合中所有的元素
      3.sismember key member 判断指定元素在指定集合中是否存在
      4.scard key 获取指定集合的长度
      5.srem key member [member member member] 移除指定集合中的一个或多个元素，不存在则忽略
      6.srandmember key [count] 随机获取指定集合中的一个或者count个元素，count>0,随机获取多个元素不重复，count<0，随机获取的多个元素可能重复
      7.spop key [count] 从指定集合中随机移除一个或者count个元素
      8.smove source dest member 将指定集合中的指定元素移动到另一个集合中
      9.sdiff key key [key key] 获取第一个集合中有，但其他集合中没有的元素组成的新集合 
      10.sinter key key [key key] 获取所有指定集合中都有的元素组成的新集合
      11.sunion key key [key key] 获取所有指定集合中所有元素组成的大集合
   （五）redis中有关hash类型数据的操作命令
      1.hset key field1 value1 [field2 value2] 将一个或者多个field-value对设置到hash表中
      2.hget key field 获取指定hash表中指定field的值
      3.hmset key field1 value1 field2 value2 批量将多个field-value对设置到hash表中
      4.hmget key field [field field] 批量获取指定hash表中的field值
      5.hgetall key 获取指定hash表中的所有field和value
      6.hdel key field field 从指定hash表中删除一个或多个field
      7.hlen key 获取指定hash表中	的所有field的个数
      8.hexists key field 判断指定hash表中是否存在某一个field
      9.hkeys key 获取指定hash表中所有的field列表
      10.hvals key 获取指定hash表中所有的value列表
      11.hincrby key field int 对指定hash表中指定field做整数加法运算
      12.hincrbyfloat key field int 对指定hahsh表中指定field值进行浮点数加法运算
      13.hsetnx key field value 将一个foe-value对设置到hash表中，若key-field以及存在时，则不设置
   （六）redis中有关zset类型数据的操作命令
      1.zadd key score member [score member score member] 将一个或者多个member及其score值加入有序集合，如果元素已存在则分数覆盖
      2.zrange key startIndex endIndex [withscores] 获取指定有序集合指定下标区间的元素
      3.zrangebyscore key min max [withscores] 获取指定有序集合中指定分数区间的元素
      4.zrem key member [member member] 删除指定有序集合中的一个或多个元素
      5.zcard key 获取指定有序集合中所有元素的个数
      6.zcount key min max获取指定有序集合中分数在指定区间内的元素的个数
      7.zrank key member 获取指定有序集合中指定元素的升序排名,从0开始
      8.zscore key member 获取指定有序集合中指定元素的分数
      9.zrevrank key member 获取指定有序集合中指定元素的降序排名

八、redis的事务
   （一）redis的事务：允许把一组redis命令放在一起，把命令进行序列化，然后一起执行，保证部分原子性
      1.multi 用来标记一个事务的开始
      2.exec 用来执行事务队列中所有的命令
      3.redis的事务只能保证部分原子性
         如果一组命令中有在压入事务队列过程中发生错误的命令，则本事务中所有命令不执行，能够保证事务的原子性
         如果一组命令中，在压入队列过程中正常，但是在执行事务队列命令时发生了错误，则只会影响发生错误的命令，不会影响其他命令的执行，不能够保证事务的原子性
      4.清除所有已经压入队列中的命令，并且结束整个事务
      5.watch key 监控key，当事务执行过程中，key对应的value发生变化，则事务放弃执行，否则正常执行
      6.unwatch 放弃监控所有已监控的key

九、redis消息的订阅与发布
   1.subscribe 订阅一个或者多个频道的消息
   2.publish channel message 将消息发布到指定频道
   3.psubscribe 订阅一个或者多个频道的消息，支持使用通配符

十、redis的主从赋值：主少从多、主写从读、读写分离、主写同步复制到从
   （一）搭建一主二从redis集群
      1.搭建三台redis服务：使用一个redis模拟三台redis服务
         提供三份配置文件：
         bind 127.0.0.1
         port 6379
         pidfile  /var/run/redis_637e9.pid
         logfile "6379.log"
         dbfilename "dump6379.rdb"
         分别使用三个redis配置文件，启动三个redis服务
         redis-server redis6379.conf &
         redis-server redis6380.conf &
         redis-server redis631.conf &
      2.通过redis客户端分别连接三台redis服务
         redis-cli -h 127.0.0.1 -p 6379
         redis-cli -h 127.0.0.1 -p 6380
         redis-cli -h 127.0.0.1 -p 6381
      3.查看三台redis服务在集群中的主从角色 info replication
         默认情况下，所有的redis服务都是主机，即都能写和读，但是都还没有从机
      4.先在6379进行写操作 set key value
         三台redis服务互相独立，互不影响
      5.设置主从关系，设从不设主
         在6380上执行 salveof 127.0.0.1 6379
         在6381上执行 salveof 127.0.0.1 6379
      6.全量复制：一旦主从关系确定，会自动把主库上已有的数据同步复制到从库
         在6380和6381上执行： keys *
      7.增量复制：主库写数据会自动同步到从库
         在6379上执行 set key value
         在6380和6381上执行 keys *
      8.主写从读，读写分离
         在6380和6381上执行 set key value 报错
      9.主机宕机，从机原地待命
         关闭6379服务 redis-cli -p 6379 shutdown
      10.主机回复，一切恢复正常
         重启6379服务 redis-server redis6379.conf &
      11.从机宕机，主机少一个从机，其它从机不变
         关闭6380服务 redis-cli -p 6380 shutdown
      12.从机恢复，需重新设置主从关系
         重启6380服务 redis-server redis6380.conf &
         设置主从关系 slaveof 127.0.0.1 6379
      13.从机上位
         主机宕机，从机原地待命
         在6380上执行 slaveof no one
         重新设置主从关系 slaveof 127.0.0.1 6380
         之前的主机恢复，重启6379服务 redis-server redis6379.conf &
         客户端连接 redis-cli -p 6379
         在6379上执行slaveof 123.0.0.1 6381
         6381服务既是主机也是从机，在6381上执行 info replcation
   （二）redis哨兵模式：主机宕机、从机上位的自动版
      1.搭建一主二从集群架构
      2.提供哨兵配置文件
         在redis安装目录下创建配置文件 redis_sentinel.conf
         sentinel monitor dc-redis 127.0.0.1 6379 1
      3.启动哨兵服务 redis-sentinel redis_sentinel.conf
      4.主机宕机
         关闭6379服务 redis-cli -p 6379 shutdown
         哨兵程序自动选择从机上位
      5.之前主机恢复，自动从属与新的主机
         重启6379服务 redis-server redis6379.conf &
         客户端连接6379 redis-cli -p 6379 

十一、redis命令总结
   1.基本
      连接测试ping
      选库select
      设置生命周期expire
      查看生命周期ttl
   2.string
      增set setnx setex mset
      删del
      查get mget
      长度strlen
      追加append
      自增incr incrby
      自减decr decrby
   3.list
      增lpush rpush linsert
      删lpop rpop lrem
      查lrange lindex
      修剪ltrim
      长度llen
   4.set
      增sadd
      删spop srem
      查smembers
      值是否存在ismember
      长度scard
      移动smove
      交集sinter
      差集sdiff
      并集sunion
   5.zset
      增zadd
      删zrem
      查zrange zrevrange zrangebyscore zrevrangebyscore
      长度zcard
      查分数zscore
      查分数排名zrank zrevrank
      查区间个数zcount	
   6.hash
      增hset hmset
      删hdel
      查hget hmget hgetall
      查所有键hkeys
      查所有值hvals
      自增hincr hincrby