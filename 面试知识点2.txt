一、char/varchar
    varchar是变长，节省存储空间，char是固定长度。查找效率要比char型快，因为varchar是非定长，必须先查找长度，然后进行数据的提取，比char定长类型多了一个步骤，所以效率低一些。

二、include和require的区别
    1.require是无条件包含，也就是如果一个流程里加入require，无论条件成立与否都会先执行require，当文件不存在或者无法打开的时候，会提示错误，并且会终止程序执行；
    2.include有返回值，而require没有，如果被包含的文件不存在的话，那么会提示一个错误，但是程序会继续执行下去。

三、PHP7的新特性
    1.PHP 7 中的函数的形参类型声明可以是标量了。在 PHP 5 中只能是类名、接口、array 或者 callable (PHP 5.4，即可以是函数，包括匿名函数)，现在也可以使用 string、int、float和 bool 了。
    2.返回值类型声明：增加了对返回类型声明的支持。 类似于参数类型声明，返回类型声明指明了函数返回值的类型。可用的类型与参数声明中可用的类型相同。
    3.NULL 合并运算符：由于日常使用中存在大量同时使用三元表达式和 isset()的情况，NULL 合并运算符使得变量存在且值不为NULL， 它就会返回自身的值，否则返回它的第二个操作数。
    4.use 加强：从同一 namespace 导入的类、函数和常量现在可以通过单个 use 语句 一次性导入了
    5.匿名类：现在支持通过new class 来实例化一个匿名类


四、PHP 数组排序
    sort() - 以升序对数组排序
    rsort() - 以降序对数组排序
    asort() - 根据值，以升序对关联数组进行排序
    ksort() - 根据键，以升序对关联数组进行排序
    arsort() - 根据值，以降序对关联数组进行排序
    krsort() - 根据键，以降序对关联数组进行排序


五、常见的 PHP 安全性攻击
    1.SQL注入：用户利用在表单字段输入SQL语句的方式来影响正常的SQL执行。
        防止：使用mysql_real_escape_string()过滤数据；手动检查每一数据是否为正确的数据类型；使用预处理语句并绑定变量；参数化SQL：是指在设计与数据库链接并访问数据时，在需要填入数值或数据的地方，使用参数 (Parameter) 来给值，用@或？来表示参数。
    2.XSS攻击 ：跨站点脚本攻击，由用户输入一些数据到你的网站，其中包括客户端脚本(通常JavaScript)。如果你没有过滤就输出数据到另一个web页面，这个脚本将被执行。
        防止：为了防止XSS攻击，使用PHP的htmlentities()函数过滤再输出到浏览器。
    3.CSRF：跨站点请求伪造，是指一个页面发出的请求，看起来就像是网站的信任用户，但是是伪造的。
        防止：一般来说，确保用户来自你的表单，并且匹配每一个你发送出去的表单。有两点一定要记住：对用户会话采用适当的安全措施，例如:给每一个会话更新id和用户使用SSL。生成另一个一次性的令牌并将其嵌入表单，保存在会话中(一个会话变量)，在提交时检查它。 如laravel中的 _token；

